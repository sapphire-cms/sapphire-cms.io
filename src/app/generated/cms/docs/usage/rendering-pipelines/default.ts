import {Docs} from "../../docs.types";

export const renderingPipelines_default: Docs = {
  "title": "Rendering Pipelines",
  "precedent": "docs/usage/content-schemas",
  "next": "docs/usage/document-shapers",
  "content": "**Rendering Pipelines** (or simply *pipelines*) are the engine that powers Sapphire CMS.\nThey handle the transformation of documents into content ready for consumption, and they orchestrate the distribution of that content to various platforms.\n\nIf you are running Sapphire on Node, pipelines are, by default, stored in `./sapphire-cms-data/pipelines`. For example:\n\n```\nMy-Project\n├── sapphire-cms-data\n    ├── pipelines\n        ├── blog\n            ├── general-blog.pipeline.yml\n            ├── blog-to-x.pipeline.yaml\n```\n\nHere is an example of a rendering pipeline definition:\n\n```yaml\n# ./sapphire-cms-data/pipelines/blog/blog-to-x.pipeline.yaml\n\nname: blog-to-x\nsource: blog\nshapers:\n  - general-blog-shaper\n  - x-social-blog-shaper\nrender: \"@codegen/eta\"\ntarget: \"@social-x\"\n```\n\nLet’s go through this pipeline step by step:\n\n- `name`: This is the name of the pipeline. It can be anything, but it should be a valid ID and unique across the CMS instance.\n\n- `source`: Defines the content store from which the pipeline will fetch documents. The store name corresponds to a content schema name.\n\n- `shapers`: *(Optional)* A list of shaper functions applied in order.\nShapers are one-way transformations that adapt content for specific targets, such as web pages, mobile, or social media platforms.\n(See the Shapers chapter for more details.)\n\n- `render`: Specifies the renderer used to transform shaped documents into final artifacts (e.g., HTML, Markdown, JSON).\nThe value `@codegen/eta` is called a **Module Reference** in Sapphire.\nIt means \"use the `eta` renderer provided by the `codegen` module.\"\n\n- `target`: Defines the delivery module that will handle publishing or storing the final content.\nIn this example, `@social-x` indicates the content will be delivered to a social network - in this case, Twitter/X."
};
