{"id":"document-shapers","store":"docs","path":["usage"],"type":"tree","variant":"default","status":"DRAFT","createdAt":"2025-04-30T13:08:22.257Z","lastModifiedAt":"2025-04-30T13:08:22.257Z","createdBy":"node@0.0.0","content":{"title":"Document Shapers","precedent":"docs/usage/rendering-pipelines","next":"docs/content-modeling/field-types","content":"**Document Shapers** are a powerful tool that allow you to precisely adapt your content for different platforms and audiences.\n\nShapers perform various kinds of transformations before documents are published - such as image resizing, link shortening, text summarization, and more.\n\nTransformations are applied **field by field**, and **in the provided order**.\n\nIf you are running Sapphire on Node, pipelines are, by default, stored in `./sapphire-cms-data/shapers`. For example:\n\n```\nMy-Project\n├── sapphire-cms-data\n    ├── shapers\n        ├── blog\n            ├── general-blog.shaper.yml\n            ├── x-social-blog.shaper.yaml\n```\n\nHere is an example of a document shaper definition:\n\n```yaml\n# ./sapphire-cms-data/shapers/blog/x-social-blog.shaper.yaml\n\nname: x-social-blog-shaper\nfor: blog\nfields:\n  content:\n    - field-shaper: \"@openai/resume\"\n      params:\n        target: x-social\n```\n\nLet's go through this definition step by step:\n\n- `name`: This is the name of the shaper. It can be anything, but it should be a valid ID and unique across the CMS instance.\n- `for`: Specifies the content schema to which this shaper applies. Only documents of this type will be processed by this shaper.\n- `field`: Defines the fields to transform.\nFor each field, a list of **field shapers** (mostly provided by modules) is specified, along with their parameters.\nIn the example above, the shaper applies an AI-based summarization to the `content` field, producing a short, punchy version suitable for publishing on Twitter/X."}}