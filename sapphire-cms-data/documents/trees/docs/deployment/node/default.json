{"id":"node","store":"docs","path":["deployment"],"type":"tree","variant":"default","status":"PUBLISHED","createdAt":"2025-04-28T19:33:37.769Z","lastModifiedAt":"2025-08-10T12:49:48.168Z","createdBy":"node@0.0.0","content":{"title":"Node","precedent":"docs/deployment/deployment-overview:default","next":"","content":"Node is a great starting point for building your CMS. It lets you prototype and iterate quickly, and it can also serve as a reliable production runtime.\n\nAdditionally, Node is already required for developing with Sapphire, so it’s a natural and straightforward choice to start with as your runtime.\n\n## Install\n\nTo add the Node platform to your Sapphire project, run:\n\n```shell\nsapphire-cms package install node\n```\n\nor\n\n```shell\nscms pkg i node\n```\n\n## Usage\n\nThe Node module offers a wide range of capabilities, including:\n\n- Persisting managed content to the local filesystem.\n- Delivering rendered content to the local filesystem.\n- Running the CMS directly on Node.\n\nHere’s a basic configuration example for running Sapphire on Node:\n\n```yaml\n# ./sapphire-cms.config.yaml\n\nconfig:\n  modules:\n    node:\n      data-dir: ./sapphire-cms-data\n      output-dir: ./src/app/generated/cms\n\nlayers:\n  bootstrap: '@node'\n  persistence: '@node'\n  platform: '@node'\n```\n\nThis instance of Sapphire will:\n\n- Launch on Node (`platform: '@node'`).\n- Bootstrap from the local filesystem (`bootstrap: '@node'`).\n- Persist managed content to the local filesystem (`persistence: '@node'`).\n\nThe local filesystem can also be used as a delivery target for rendered content. For example:\n\n```yaml\n# ./sapphire-cms-data/pipelines/docs-to-ts.yaml\n\nname: docs-to-ts\nsource: docs\ntarget: '@node'\nrender: '@codegen/typescript'\n```\n\n### Startup\n\nTo start the CMS instance on Node, run:\n\n```shell\nsapphire-node\n```\n\nor via Sapphire CLI:\n\n\n```shell\nscms start\n```\n\n### Bundling\n\nWhile not strictly necessary, Sapphire running on Node can also be bundled with AOT.\nFor local development, this isn’t needed, but for production, it can significantly reduce cold start times.\n\nTo compile and bundle:\n\n```shell\nscms build\n```\n\nThis will produce an executable: `./dist/sapphire-cms/sapphire.standalone.js`.\n\nYou can start it with:\n\n```shell\n./dist/sapphire-cms/sapphire.standalone.js\n```\n\n### Configuration\n\nThe Node module is configured just like any other Sapphire module, using the `sapphire-cms.config.yaml` file.\n\n| Parameter   | Type   | Mandatory | Description                                                                                                                    |\n| ----------- | ------ | --------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| root        | string | no        | Absolute path to the root folder of the CMS project. Defaults to the directory of the script invocation.                       |\n| config-file | string | no        | Absolute or relative path (from the root) to the configuration file. Defaults to `./sapphire-cms.config.yaml`.                 |\n| data-dir    | string | no        | Absolute or relative path (from the root) to the folder where CMS stores its internal data. Defaults to `./sapphire-cms-data`. |\n| output-dir  | string | no        | Absolute or relative path (from the root) to the folder where CMS outputs rendered documents. Defaults to `./out`.             |"}}