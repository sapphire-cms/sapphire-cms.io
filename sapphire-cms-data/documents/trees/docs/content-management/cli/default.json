{"id":"cli","store":"docs","path":["content-management"],"type":"tree","variant":"default","status":"PUBLISHED","createdAt":"2025-04-30T13:32:31.256Z","lastModifiedAt":"2025-08-08T21:01:10.754Z","createdBy":"node@0.0.0","content":{"title":"Content Management Through CLI","precedent":"docs/content-modeling/field-validators/required","next":"docs/content-management/rest:default","content":"Sapphire CMS offers multiple ways to edit content, including a **command-line interface (CLI)**.\nThis can be very convenient for users who want to quickly try Sapphire CMS, or for those who prefer not to install a graphical interface.\n\nTo install the Sapphire CLI globally, run:\n\n```shell\nnpm install -g @sapphire-cms/cli\n```\n\nAfter installation, verify that the CLI is installed correctly:\n\n```shell\nsapphire-cms -V\n```\n\nThe `sapphire-cms` command also has a shorter alias: `scms`.\nSo the previous command can be shortened to:\n\n```yaml\nscms -V\n```\n\nSapphire CLI is **self-documented**. You can simply run `scms` to see the full list of supported subcommands and their arguments.\n\n---\n\n## Basic Commands\n\nStart by listing available content schemas:\n\n```shell\nscms schema ls\n```\n\nTo create a new document in a store:\n\n```shell\nscms doc create blog\n```\n\n(Assuming a content schema named `blog` exists, this command will create a new document in that store.)\n\nThe `doc create` and `doc edit` commands open the edited document in your system's default text editor.\nInside the editor, you can fill in all the fields of the document using organized placeholders.\nThe document layout is straightforward, and Sapphire provides abundant comments to guide you.\n\nOnce you finish editing, simply **save the file and close the editor** â€” Sapphire will automatically process the document.\n\n---\n\n## Choosing an Editor\n\nBy default, `doc create` and `doc edit` use the system's default editor.\nYou can override this by providing the `--editor` (or `-e`) option. For example:\n\n```shell\nscms doc edit blog --doc intro --editor vscode\n```\n\nAlternatively, you can define the preferred editor in your `sapphire-cms.config.yaml`:\n\n```yaml\nconfig:\n  modules:\n    cli:\n      editor: vscode\n```\n\n---\n\n## Publishing Content\n\nWhen you are satisfied with your document, you can publish (render) it using:\n\n```shell\nscms doc render blog --doc intro\n```"}}